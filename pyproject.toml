[build-system]
build-backend = "uv_build"
requires = ["uv_build"]

[project]
authors = [{ name = "Geoff Boeing", email = "boeing@usc.edu" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
  "geopandas>=1.0.1",
  "networkx>=2.5",
  "numpy>=1.22",
  "pandas>=1.4",
  "requests>=2.27",
  "shapely>=2.0",
]
description = "Download, model, analyze, and visualize street networks and other geospatial features from OpenStreetMap"
keywords = ["GIS", "Networks", "OpenStreetMap", "Routing"]
license = "MIT"
license-files = ["LICENSE.txt"]
maintainers = [{ name = "OSMnx contributors" }]
name = "osmnx"
readme = "README.md"
requires-python = ">=3.9" # match classifiers above and mypy version below
version = "2.0.5"

[project.optional-dependencies]
all = ["osmnx[entropy,neighbors,raster,visualization]"]
entropy = ["scipy>=1.8"]
neighbors = ["scikit-learn>=1.1", "scipy>=1.8"]
raster = ["rasterio>=1.3.5", "rio-vrt>=0.3"]
visualization = ["matplotlib>=3.5"]

[dependency-groups]
docs = ["furo>=2023", "sphinx>=7", "sphinx-autodoc-typehints>=2"]
examples = ["folium>=0.12", "jupyterlab>=3.0", "mapclassify>=2.5", "igraph>=0.9"]
lint = ["pip>=25", "pre-commit>=4", "twine>=6", "validate-pyproject[all]>=0.24"]
test = ["lxml>=5.1", "pytest>=8", "pytest-cov>=6", "pytest-xdist>=3", "typeguard>=4"]

[project.urls]
Documentation = "https://osmnx.readthedocs.io"
"Code Repository" = "https://github.com/gboeing/osmnx"
"Examples Gallery" = "https://github.com/gboeing/osmnx-examples"

[tool.coverage.report]
exclude_also = ["@overload", "if TYPE_CHECKING:"]

[tool.mypy]
cache_dir = "~/.cache/pre-commit/mypy"
ignore_missing_imports = true
python_version = "3.9"
strict = true
warn_no_return = true
warn_unreachable = true

[tool.numpydoc_validation]
checks = ["all", "ES01", "EX01", "GL08", "PR04", "SA01"]

[tool.ruff]
cache-dir = "~/.cache/pre-commit/ruff"
exclude = ["build/*"]
line-length = 100

[tool.ruff.lint]
extend-ignore = ["N803", "N806", "SLF001"]
extend-select = ["ALL"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.mccabe]
max-complexity = 14

[tool.ruff.lint.pycodestyle]
max-line-length = 110 # line length + 10% since it isn't a hard upper bound

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args = 8

[tool.uv]
required-version = "==0.7.*" # match version in environments/docker/install.sh

[tool.uv.build-backend]
module-root = ""
