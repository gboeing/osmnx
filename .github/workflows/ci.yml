# This workflow runs the repo's CI tests.
name: CI

on:
  push:
    branches: [main, v1]
  pull_request:
    branches: [main, v1]
  schedule:
    - cron: 5 4 * * 1  # every monday at 04:05 UTC
  workflow_dispatch:

jobs:
  ci:
    name: Python ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13', '3.14']

    defaults:
      run:
        shell: bash -elo pipefail {0}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          cache-dependency-glob: pyproject.toml
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install OSMnx
        run: |
          uv sync --all-extras --dev
          uv pip check
          uv pip list
          uv pip show osmnx
          uv run python --version

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-${{ matrix.python-version }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit checks
        run: uv run pre-commit run --all-files
        env:
          SKIP: no-commit-to-branch

      - name: Build and check package
        run: |
          uv run validate-pyproject pyproject.toml
          uv build
          uv run twine check --strict dist/*

      - name: Test docs build
        run: uv run sphinx-build -E -W --keep-going -b html ./docs/source ./docs/build/html

      - name: Test code and coverage
        run: >
             uv run pytest
             --verbose
             --maxfail=1
             --typeguard-packages=osmnx
             --cov=osmnx
             --cov-report=xml
             --numprocesses=3
             --dist=loadgroup

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
